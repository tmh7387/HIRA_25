{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmh73\\\\Aviation Synergy\\\\MaXwell AI - General\\\\HIRA_25\\\\src\\\\components\\\\RiskControls.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useRiskMatrixStore } from '../stores/riskMatrixStore';\nimport { calculateRiskRating } from '../utils/riskCalculations';\nimport useProjectStore from '../stores/projectStore';\nimport { createRiskControl, getRiskControlByAssessmentId, updateRiskControl } from '../services/controlService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RiskControls() {\n  _s();\n  const {\n    matrixType\n  } = useRiskMatrixStore();\n  const {\n    currentProject,\n    riskAssessmentData,\n    setStepData\n  } = useProjectStore();\n\n  // Get assessments from risk assessment data\n  const assessments = (riskAssessmentData === null || riskAssessmentData === void 0 ? void 0 : riskAssessmentData.assessments) || [];\n\n  // Filter assessments based on risk level\n  const filteredAssessments = assessments.filter(assessment => {\n    if (matrixType === 'ICAO') {\n      return assessment.tolerability !== 'ACCEPTABLE';\n    } else {\n      const riskRating = calculateRiskRating(assessment.likelihood || 0, assessment.impact || 0);\n      return riskRating !== 'Low';\n    }\n  });\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm({\n    defaultValues: {\n      controls: filteredAssessments.map(assessment => ({\n        assessment_id: assessment.uniqueId,\n        additionalMitigation: '',\n        riskOwner: '',\n        targetDate: '',\n        dateImplemented: ''\n      }))\n    }\n  });\n\n  // Load existing controls when component mounts\n  useEffect(() => {\n    const loadExistingControls = async () => {\n      try {\n        // Load controls for each assessment\n        const controlPromises = filteredAssessments.map(assessment => getRiskControlByAssessmentId(assessment.uniqueId));\n        const controls = await Promise.all(controlPromises);\n\n        // Set form values for existing controls\n        controls.forEach((control, index) => {\n          if (control) {\n            setValue(`controls.${index}.additionalMitigation`, control.additional_mitigation);\n            setValue(`controls.${index}.riskOwner`, control.risk_owner);\n            setValue(`controls.${index}.targetDate`, control.target_date);\n            setValue(`controls.${index}.dateImplemented`, control.date_implemented);\n          }\n        });\n      } catch (error) {\n        console.error('Error loading existing controls:', error);\n      }\n    };\n    loadExistingControls();\n  }, [filteredAssessments, setValue]);\n  const onFormSubmit = async data => {\n    try {\n      // Save each control\n      const savedControls = await Promise.all(data.controls.map(async control => {\n        const existingControl = await getRiskControlByAssessmentId(control.assessment_id);\n        if (existingControl) {\n          return updateRiskControl(existingControl.id, control);\n        } else {\n          return createRiskControl(control.assessment_id, control);\n        }\n      }));\n\n      // Update store with saved controls\n      await setStepData(4, {\n        controls: savedControls\n      });\n    } catch (error) {\n      console.error('Error saving controls:', error);\n    }\n  };\n  const getRiskIndicator = assessment => {\n    if (matrixType === 'ICAO') {\n      return assessment.tolerability;\n    } else {\n      return calculateRiskRating(assessment.likelihood || 0, assessment.impact || 0);\n    }\n  };\n  const getRiskIndicatorStyle = indicator => {\n    const styles = {\n      'INTOLERABLE': 'bg-red-200 text-red-800',\n      'TOLERABLE': 'bg-yellow-100 text-yellow-800',\n      'High': 'bg-red-200 text-red-800',\n      'Moderate': 'bg-orange-200 text-orange-800',\n      'Medium': 'bg-yellow-100 text-yellow-800'\n    };\n    return styles[indicator] || 'bg-gray-100 text-gray-800';\n  };\n  if (filteredAssessments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6 max-w-6xl mx-auto p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-md rounded-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-6\",\n          children: \"Risk Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-8 text-gray-600\",\n          children: \"No risks requiring additional controls were identified. All risks are at acceptable/low levels.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Group assessments by event\n  const groupedAssessments = filteredAssessments.reduce((acc, assessment) => {\n    if (!acc[assessment.event]) {\n      acc[assessment.event] = [];\n    }\n    acc[assessment.event].push(assessment);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 max-w-6xl mx-auto p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-md rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Risk Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-6\",\n        children: [\"Showing \", filteredAssessments.length, \" risk\", filteredAssessments.length !== 1 ? 's' : '', \" requiring additional controls.\", matrixType === 'ICAO' ? ' (Excluding Acceptable risks)' : ' (Excluding Low risks)']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onFormSubmit),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-8\",\n          children: [Object.entries(groupedAssessments).map(([event, eventAssessments]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 rounded-lg p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: event\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-6\",\n              children: eventAssessments.map((assessment, index) => {\n                const riskIndicator = getRiskIndicator(assessment);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white rounded-lg p-4 shadow-sm\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-gray-700\",\n                        children: \"Hazard\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-gray-600\",\n                        children: assessment.hazard\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-gray-700\",\n                        children: \"Consequence\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-gray-600\",\n                        children: assessment.consequence\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"hidden\",\n                        ...register(`controls.${index}.assessment_id`),\n                        defaultValue: assessment.uniqueId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-gray-700\",\n                        children: \"Current Controls\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-gray-600\",\n                        children: assessment.currentControls\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getRiskIndicatorStyle(riskIndicator)}`,\n                      children: [\"Risk Level: \", riskIndicator]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-1 gap-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700\",\n                          children: \"Additional Mitigation Measures\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 178,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                          ...register(`controls.${index}.additionalMitigation`),\n                          rows: 3,\n                          className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\",\n                          required: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 179,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"grid grid-cols-2 gap-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700\",\n                            children: \"Risk Owner\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            ...register(`controls.${index}.riskOwner`),\n                            className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\",\n                            required: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700\",\n                            children: \"Target Date\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 199,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"date\",\n                            ...register(`controls.${index}.targetDate`),\n                            className: \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\",\n                            required: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 200,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 25\n                  }, this)\n                }, assessment.uniqueId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, event, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\",\n              children: \"Complete Assessment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(RiskControls, \"Z3QUvRJMhIgSOMXtnNPvTusZv9w=\", false, function () {\n  return [useRiskMatrixStore, useProjectStore, useForm];\n});\n_c = RiskControls;\nRiskControls.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialData: PropTypes.arrayOf(PropTypes.shape({\n    assessment_id: PropTypes.string.isRequired,\n    additionalMitigation: PropTypes.string,\n    riskOwner: PropTypes.string,\n    targetDate: PropTypes.string,\n    dateImplemented: PropTypes.string\n  }))\n};\nvar _c;\n$RefreshReg$(_c, \"RiskControls\");","map":{"version":3,"names":["React","useEffect","PropTypes","useForm","useRiskMatrixStore","calculateRiskRating","useProjectStore","createRiskControl","getRiskControlByAssessmentId","updateRiskControl","jsxDEV","_jsxDEV","RiskControls","_s","matrixType","currentProject","riskAssessmentData","setStepData","assessments","filteredAssessments","filter","assessment","tolerability","riskRating","likelihood","impact","register","handleSubmit","setValue","defaultValues","controls","map","assessment_id","uniqueId","additionalMitigation","riskOwner","targetDate","dateImplemented","loadExistingControls","controlPromises","Promise","all","forEach","control","index","additional_mitigation","risk_owner","target_date","date_implemented","error","console","onFormSubmit","data","savedControls","existingControl","id","getRiskIndicator","getRiskIndicatorStyle","indicator","styles","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","groupedAssessments","reduce","acc","event","push","onSubmit","Object","entries","eventAssessments","riskIndicator","hazard","consequence","type","defaultValue","currentControls","rows","required","_c","propTypes","func","isRequired","initialData","arrayOf","shape","string","$RefreshReg$"],"sources":["C:/Users/tmh73/Aviation Synergy/MaXwell AI - General/HIRA_25/src/components/RiskControls.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useRiskMatrixStore } from '../stores/riskMatrixStore';\nimport { calculateRiskRating } from '../utils/riskCalculations';\nimport useProjectStore from '../stores/projectStore';\nimport { createRiskControl, getRiskControlByAssessmentId, updateRiskControl } from '../services/controlService';\n\nexport default function RiskControls() {\n  const { matrixType } = useRiskMatrixStore();\n  const { currentProject, riskAssessmentData, setStepData } = useProjectStore();\n  \n  // Get assessments from risk assessment data\n  const assessments = riskAssessmentData?.assessments || [];\n  \n  // Filter assessments based on risk level\n  const filteredAssessments = assessments.filter(assessment => {\n    if (matrixType === 'ICAO') {\n      return assessment.tolerability !== 'ACCEPTABLE';\n    } else {\n      const riskRating = calculateRiskRating(assessment.likelihood || 0, assessment.impact || 0);\n      return riskRating !== 'Low';\n    }\n  });\n\n  const { register, handleSubmit, setValue } = useForm({\n    defaultValues: {\n      controls: filteredAssessments.map(assessment => ({\n        assessment_id: assessment.uniqueId,\n        additionalMitigation: '',\n        riskOwner: '',\n        targetDate: '',\n        dateImplemented: ''\n      }))\n    }\n  });\n\n  // Load existing controls when component mounts\n  useEffect(() => {\n    const loadExistingControls = async () => {\n      try {\n        // Load controls for each assessment\n        const controlPromises = filteredAssessments.map(assessment =>\n          getRiskControlByAssessmentId(assessment.uniqueId)\n        );\n        \n        const controls = await Promise.all(controlPromises);\n        \n        // Set form values for existing controls\n        controls.forEach((control, index) => {\n          if (control) {\n            setValue(`controls.${index}.additionalMitigation`, control.additional_mitigation);\n            setValue(`controls.${index}.riskOwner`, control.risk_owner);\n            setValue(`controls.${index}.targetDate`, control.target_date);\n            setValue(`controls.${index}.dateImplemented`, control.date_implemented);\n          }\n        });\n      } catch (error) {\n        console.error('Error loading existing controls:', error);\n      }\n    };\n\n    loadExistingControls();\n  }, [filteredAssessments, setValue]);\n\n  const onFormSubmit = async (data) => {\n    try {\n      // Save each control\n      const savedControls = await Promise.all(\n        data.controls.map(async control => {\n          const existingControl = await getRiskControlByAssessmentId(control.assessment_id);\n          \n          if (existingControl) {\n            return updateRiskControl(existingControl.id, control);\n          } else {\n            return createRiskControl(control.assessment_id, control);\n          }\n        })\n      );\n\n      // Update store with saved controls\n      await setStepData(4, { controls: savedControls });\n    } catch (error) {\n      console.error('Error saving controls:', error);\n    }\n  };\n\n  const getRiskIndicator = (assessment) => {\n    if (matrixType === 'ICAO') {\n      return assessment.tolerability;\n    } else {\n      return calculateRiskRating(assessment.likelihood || 0, assessment.impact || 0);\n    }\n  };\n\n  const getRiskIndicatorStyle = (indicator) => {\n    const styles = {\n      'INTOLERABLE': 'bg-red-200 text-red-800',\n      'TOLERABLE': 'bg-yellow-100 text-yellow-800',\n      'High': 'bg-red-200 text-red-800',\n      'Moderate': 'bg-orange-200 text-orange-800',\n      'Medium': 'bg-yellow-100 text-yellow-800'\n    };\n    return styles[indicator] || 'bg-gray-100 text-gray-800';\n  };\n\n  if (filteredAssessments.length === 0) {\n    return (\n      <div className=\"space-y-6 max-w-6xl mx-auto p-6\">\n        <div className=\"bg-white shadow-md rounded-lg p-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Risk Controls</h2>\n          <div className=\"text-center py-8 text-gray-600\">\n            No risks requiring additional controls were identified.\n            All risks are at acceptable/low levels.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Group assessments by event\n  const groupedAssessments = filteredAssessments.reduce((acc, assessment) => {\n    if (!acc[assessment.event]) {\n      acc[assessment.event] = [];\n    }\n    acc[assessment.event].push(assessment);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"space-y-6 max-w-6xl mx-auto p-6\">\n      <div className=\"bg-white shadow-md rounded-lg p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Risk Controls</h2>\n        <p className=\"text-sm text-gray-600 mb-6\">\n          Showing {filteredAssessments.length} risk{filteredAssessments.length !== 1 ? 's' : ''} requiring additional controls.\n          {matrixType === 'ICAO' ? \n            ' (Excluding Acceptable risks)' : \n            ' (Excluding Low risks)'}\n        </p>\n\n        <form onSubmit={handleSubmit(onFormSubmit)}>\n          <div className=\"space-y-8\">\n            {Object.entries(groupedAssessments).map(([event, eventAssessments]) => (\n              <div key={event} className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">{event}</h3>\n                <div className=\"space-y-6\">\n                  {eventAssessments.map((assessment, index) => {\n                    const riskIndicator = getRiskIndicator(assessment);\n                    return (\n                      <div key={assessment.uniqueId} className=\"bg-white rounded-lg p-4 shadow-sm\">\n                        <div className=\"space-y-4\">\n                          <div>\n                            <h4 className=\"font-medium text-gray-700\">Hazard</h4>\n                            <p className=\"text-gray-600\">{assessment.hazard}</p>\n                          </div>\n\n                          <div>\n                            <h4 className=\"font-medium text-gray-700\">Consequence</h4>\n                            <p className=\"text-gray-600\">{assessment.consequence}</p>\n                            <input \n                              type=\"hidden\" \n                              {...register(`controls.${index}.assessment_id`)} \n                              defaultValue={assessment.uniqueId}\n                            />\n                          </div>\n\n                          <div>\n                            <h4 className=\"font-medium text-gray-700\">Current Controls</h4>\n                            <p className=\"text-gray-600\">{assessment.currentControls}</p>\n                          </div>\n\n                          <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getRiskIndicatorStyle(riskIndicator)}`}>\n                            Risk Level: {riskIndicator}\n                          </div>\n\n                          <div className=\"grid grid-cols-1 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700\">Additional Mitigation Measures</label>\n                              <textarea\n                                {...register(`controls.${index}.additionalMitigation`)}\n                                rows={3}\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                                required\n                              />\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700\">Risk Owner</label>\n                                <input\n                                  type=\"text\"\n                                  {...register(`controls.${index}.riskOwner`)}\n                                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                                  required\n                                />\n                              </div>\n\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700\">Target Date</label>\n                                <input\n                                  type=\"date\"\n                                  {...register(`controls.${index}.targetDate`)}\n                                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                                  required\n                                />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            ))}\n\n            <div className=\"flex justify-end\">\n              <button\n                type=\"submit\"\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n              >\n                Complete Assessment\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nRiskControls.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  initialData: PropTypes.arrayOf(PropTypes.shape({\n    assessment_id: PropTypes.string.isRequired,\n    additionalMitigation: PropTypes.string,\n    riskOwner: PropTypes.string,\n    targetDate: PropTypes.string,\n    dateImplemented: PropTypes.string\n  }))\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}