{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmh73\\\\Aviation Synergy\\\\MaXwell AI - General\\\\HIRA_25\\\\src\\\\stores\\\\projectStore.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext } from 'react';\nimport { create } from 'zustand';\nimport { supabase } from '../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useProjectStore = create((set, get) => ({\n  projects: [],\n  currentProject: null,\n  currentStep: 0,\n  isLoading: false,\n  error: null,\n  hazardIdentificationData: {},\n  riskAssessmentData: {},\n  setCurrentProject: project => set({\n    currentProject: project\n  }),\n  setCurrentStep: step => set({\n    currentStep: step\n  }),\n  setHazardIdentificationData: data => set({\n    hazardIdentificationData: data\n  }),\n  setRiskAssessmentData: data => set({\n    riskAssessmentData: data\n  }),\n  loadProjects: async () => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('hira_projects').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      set({\n        projects: data\n      });\n    } catch (error) {\n      console.error('Load projects error:', error);\n      set({\n        error: error.message\n      });\n    } finally {\n      set({\n        isLoading: false\n      });\n    }\n  },\n  createProject: async projectData => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('hira_projects').insert([projectData]).select().single();\n      if (error) throw error;\n      set(state => ({\n        projects: [data, ...state.projects],\n        currentProject: data\n      }));\n      return data;\n    } catch (error) {\n      console.error('Create project error:', error);\n      set({\n        error: error.message\n      });\n      throw error;\n    } finally {\n      set({\n        isLoading: false\n      });\n    }\n  },\n  updateProject: async (id, projectData) => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('hira_projects').update(projectData).eq('id', id).select().single();\n      if (error) throw error;\n      set(state => ({\n        projects: state.projects.map(p => p.id === id ? data : p),\n        currentProject: data\n      }));\n      return data;\n    } catch (error) {\n      console.error('Update project error:', error);\n      set({\n        error: error.message\n      });\n      throw error;\n    } finally {\n      set({\n        isLoading: false\n      });\n    }\n  },\n  deleteProject: async id => {\n    set({\n      isLoading: true,\n      error: null\n    });\n    try {\n      const {\n        error\n      } = await supabase.from('hira_projects').delete().eq('id', id);\n      if (error) throw error;\n      set(state => ({\n        projects: state.projects.filter(p => p.id !== id),\n        currentProject: null\n      }));\n    } catch (error) {\n      console.error('Delete project error:', error);\n      set({\n        error: error.message\n      });\n      throw error;\n    } finally {\n      set({\n        isLoading: false\n      });\n    }\n  }\n}));\nconst ProjectStoreContext = /*#__PURE__*/createContext();\nexport const ProjectStoreProvider = ({\n  children\n}) => {\n  _s();\n  const store = useProjectStore();\n  return /*#__PURE__*/_jsxDEV(ProjectStoreContext.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectStoreProvider, \"mAOz46q01EClzuejUd7fG0ykt6c=\", false, function () {\n  return [useProjectStore];\n});\n_c = ProjectStoreProvider;\nexport const useProjectStoreContext = () => {\n  _s2();\n  return useContext(ProjectStoreContext);\n};\n_s2(useProjectStoreContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useProjectStore;\nvar _c;\n$RefreshReg$(_c, \"ProjectStoreProvider\");","map":{"version":3,"names":["createContext","useContext","create","supabase","jsxDEV","_jsxDEV","useProjectStore","set","get","projects","currentProject","currentStep","isLoading","error","hazardIdentificationData","riskAssessmentData","setCurrentProject","project","setCurrentStep","step","setHazardIdentificationData","data","setRiskAssessmentData","loadProjects","from","select","order","ascending","console","message","createProject","projectData","insert","single","state","updateProject","id","update","eq","map","p","deleteProject","delete","filter","ProjectStoreContext","ProjectStoreProvider","children","_s","store","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProjectStoreContext","_s2","$RefreshReg$"],"sources":["C:/Users/tmh73/Aviation Synergy/MaXwell AI - General/HIRA_25/src/stores/projectStore.js"],"sourcesContent":["import { createContext, useContext } from 'react';\r\nimport { create } from 'zustand';\r\nimport { supabase } from '../services/supabase';\r\n\r\nconst useProjectStore = create((set, get) => ({\r\n  projects: [],\r\n  currentProject: null,\r\n  currentStep: 0,\r\n  isLoading: false,\r\n  error: null,\r\n  hazardIdentificationData: {},\r\n  riskAssessmentData: {},\r\n\r\n  setCurrentProject: (project) => set({ currentProject: project }),\r\n  \r\n  setCurrentStep: (step) => set({ currentStep: step }),\r\n\r\n  setHazardIdentificationData: (data) => set({ hazardIdentificationData: data }),\r\n  \r\n  setRiskAssessmentData: (data) => set({ riskAssessmentData: data }),\r\n\r\n  loadProjects: async () => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('hira_projects')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      set({ projects: data });\r\n    } catch (error) {\r\n      console.error('Load projects error:', error);\r\n      set({ error: error.message });\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  },\r\n\r\n  createProject: async (projectData) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('hira_projects')\r\n        .insert([projectData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      set((state) => ({\r\n        projects: [data, ...state.projects],\r\n        currentProject: data\r\n      }));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Create project error:', error);\r\n      set({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  },\r\n\r\n  updateProject: async (id, projectData) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('hira_projects')\r\n        .update(projectData)\r\n        .eq('id', id)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      set((state) => ({\r\n        projects: state.projects.map((p) =>\r\n          p.id === id ? data : p\r\n        ),\r\n        currentProject: data\r\n      }));\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Update project error:', error);\r\n      set({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  },\r\n\r\n  deleteProject: async (id) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const { error } = await supabase\r\n        .from('hira_projects')\r\n        .delete()\r\n        .eq('id', id);\r\n\r\n      if (error) throw error;\r\n\r\n      set((state) => ({\r\n        projects: state.projects.filter((p) => p.id !== id),\r\n        currentProject: null\r\n      }));\r\n    } catch (error) {\r\n      console.error('Delete project error:', error);\r\n      set({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  }\r\n}));\r\n\r\nconst ProjectStoreContext = createContext();\r\n\r\nexport const ProjectStoreProvider = ({ children }) => {\r\n  const store = useProjectStore();\r\n  return (\r\n    <ProjectStoreContext.Provider value={store}>\r\n      {children}\r\n    </ProjectStoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjectStoreContext = () => useContext(ProjectStoreContext);\r\n\r\nexport default useProjectStore;"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,MAAM,QAAQ,SAAS;AAChC,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGJ,MAAM,CAAC,CAACK,GAAG,EAAEC,GAAG,MAAM;EAC5CC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE,IAAI;EACpBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,wBAAwB,EAAE,CAAC,CAAC;EAC5BC,kBAAkB,EAAE,CAAC,CAAC;EAEtBC,iBAAiB,EAAGC,OAAO,IAAKV,GAAG,CAAC;IAAEG,cAAc,EAAEO;EAAQ,CAAC,CAAC;EAEhEC,cAAc,EAAGC,IAAI,IAAKZ,GAAG,CAAC;IAAEI,WAAW,EAAEQ;EAAK,CAAC,CAAC;EAEpDC,2BAA2B,EAAGC,IAAI,IAAKd,GAAG,CAAC;IAAEO,wBAAwB,EAAEO;EAAK,CAAC,CAAC;EAE9EC,qBAAqB,EAAGD,IAAI,IAAKd,GAAG,CAAC;IAAEQ,kBAAkB,EAAEM;EAAK,CAAC,CAAC;EAElEE,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxBhB,GAAG,CAAC;MAAEK,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAM;QAAEQ,IAAI;QAAER;MAAM,CAAC,GAAG,MAAMV,QAAQ,CACnCqB,IAAI,CAAC,eAAe,CAAC,CACrBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;MAE5C,IAAId,KAAK,EAAE,MAAMA,KAAK;MAEtBN,GAAG,CAAC;QAAEE,QAAQ,EAAEY;MAAK,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACde,OAAO,CAACf,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CN,GAAG,CAAC;QAAEM,KAAK,EAAEA,KAAK,CAACgB;MAAQ,CAAC,CAAC;IAC/B,CAAC,SAAS;MACRtB,GAAG,CAAC;QAAEK,SAAS,EAAE;MAAM,CAAC,CAAC;IAC3B;EACF,CAAC;EAEDkB,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpCxB,GAAG,CAAC;MAAEK,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAM;QAAEQ,IAAI;QAAER;MAAM,CAAC,GAAG,MAAMV,QAAQ,CACnCqB,IAAI,CAAC,eAAe,CAAC,CACrBQ,MAAM,CAAC,CAACD,WAAW,CAAC,CAAC,CACrBN,MAAM,CAAC,CAAC,CACRQ,MAAM,CAAC,CAAC;MAEX,IAAIpB,KAAK,EAAE,MAAMA,KAAK;MAEtBN,GAAG,CAAE2B,KAAK,KAAM;QACdzB,QAAQ,EAAE,CAACY,IAAI,EAAE,GAAGa,KAAK,CAACzB,QAAQ,CAAC;QACnCC,cAAc,EAAEW;MAClB,CAAC,CAAC,CAAC;MAEH,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOR,KAAK,EAAE;MACde,OAAO,CAACf,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CN,GAAG,CAAC;QAAEM,KAAK,EAAEA,KAAK,CAACgB;MAAQ,CAAC,CAAC;MAC7B,MAAMhB,KAAK;IACb,CAAC,SAAS;MACRN,GAAG,CAAC;QAAEK,SAAS,EAAE;MAAM,CAAC,CAAC;IAC3B;EACF,CAAC;EAEDuB,aAAa,EAAE,MAAAA,CAAOC,EAAE,EAAEL,WAAW,KAAK;IACxCxB,GAAG,CAAC;MAAEK,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAM;QAAEQ,IAAI;QAAER;MAAM,CAAC,GAAG,MAAMV,QAAQ,CACnCqB,IAAI,CAAC,eAAe,CAAC,CACrBa,MAAM,CAACN,WAAW,CAAC,CACnBO,EAAE,CAAC,IAAI,EAAEF,EAAE,CAAC,CACZX,MAAM,CAAC,CAAC,CACRQ,MAAM,CAAC,CAAC;MAEX,IAAIpB,KAAK,EAAE,MAAMA,KAAK;MAEtBN,GAAG,CAAE2B,KAAK,KAAM;QACdzB,QAAQ,EAAEyB,KAAK,CAACzB,QAAQ,CAAC8B,GAAG,CAAEC,CAAC,IAC7BA,CAAC,CAACJ,EAAE,KAAKA,EAAE,GAAGf,IAAI,GAAGmB,CACvB,CAAC;QACD9B,cAAc,EAAEW;MAClB,CAAC,CAAC,CAAC;MAEH,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOR,KAAK,EAAE;MACde,OAAO,CAACf,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CN,GAAG,CAAC;QAAEM,KAAK,EAAEA,KAAK,CAACgB;MAAQ,CAAC,CAAC;MAC7B,MAAMhB,KAAK;IACb,CAAC,SAAS;MACRN,GAAG,CAAC;QAAEK,SAAS,EAAE;MAAM,CAAC,CAAC;IAC3B;EACF,CAAC;EAED6B,aAAa,EAAE,MAAOL,EAAE,IAAK;IAC3B7B,GAAG,CAAC;MAAEK,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrC,IAAI;MACF,MAAM;QAAEA;MAAM,CAAC,GAAG,MAAMV,QAAQ,CAC7BqB,IAAI,CAAC,eAAe,CAAC,CACrBkB,MAAM,CAAC,CAAC,CACRJ,EAAE,CAAC,IAAI,EAAEF,EAAE,CAAC;MAEf,IAAIvB,KAAK,EAAE,MAAMA,KAAK;MAEtBN,GAAG,CAAE2B,KAAK,KAAM;QACdzB,QAAQ,EAAEyB,KAAK,CAACzB,QAAQ,CAACkC,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC;QACnD1B,cAAc,EAAE;MAClB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOG,KAAK,EAAE;MACde,OAAO,CAACf,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CN,GAAG,CAAC;QAAEM,KAAK,EAAEA,KAAK,CAACgB;MAAQ,CAAC,CAAC;MAC7B,MAAMhB,KAAK;IACb,CAAC,SAAS;MACRN,GAAG,CAAC;QAAEK,SAAS,EAAE;MAAM,CAAC,CAAC;IAC3B;EACF;AACF,CAAC,CAAC,CAAC;AAEH,MAAMgC,mBAAmB,gBAAG5C,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAM6C,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAMC,KAAK,GAAG1C,eAAe,CAAC,CAAC;EAC/B,oBACED,OAAA,CAACuC,mBAAmB,CAACK,QAAQ;IAACC,KAAK,EAAEF,KAAM;IAAAF,QAAA,EACxCA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAACP,EAAA,CAPWF,oBAAoB;EAAA,QACjBvC,eAAe;AAAA;AAAAiD,EAAA,GADlBV,oBAAoB;AASjC,OAAO,MAAMW,sBAAsB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxD,UAAU,CAAC2C,mBAAmB,CAAC;AAAA;AAACa,GAAA,CAA/DD,sBAAsB;AAEnC,eAAelD,eAAe;AAAC,IAAAiD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}