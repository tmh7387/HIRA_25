{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmh73\\\\Aviation Synergy\\\\MaXwell AI - General\\\\HIRA_25\\\\src\\\\components\\\\RiskAssessment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport RiskMatrixSelector from './RiskMatrixSelector';\nimport RiskMatrixReference from './RiskMatrixReference';\nimport AssessmentForm from './AssessmentForm';\nimport useProjectStore from '../stores/projectStore';\nimport { useRiskMatrixStore } from '../stores/riskMatrixStore';\nimport { updateAssessments, getAssessmentsByConsequenceId } from '../services/riskAssessmentService';\n\n// Error Alert Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ErrorAlert = ({\n  message\n}) => {\n  if (!message) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 mb-4 bg-red-50 border border-red-200 rounded-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-shrink-0\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-5 w-5 text-red-400\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-700\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ErrorAlert;\nexport default function RiskAssessment() {\n  _s();\n  const {\n    currentProject,\n    hazardIdentificationData,\n    riskAssessmentData,\n    setStepData,\n    setCurrentStep,\n    error: storeError\n  } = useProjectStore();\n  const {\n    matrixType,\n    setMatrixType\n  } = useRiskMatrixStore();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [localError, setLocalError] = useState(null);\n  const events = (hazardIdentificationData === null || hazardIdentificationData === void 0 ? void 0 : hazardIdentificationData.events) || [];\n  console.log('Initial events:', events);\n\n  // Local state for form data\n  const [formData, setFormData] = useState(() => ({\n    assessments: events.flatMap(event => (event.hazards || []).flatMap(hazard => (hazard.consequences || []).map(consequence => {\n      console.log('Setting up consequence:', consequence);\n      console.log('Consequence ID:', consequence.id);\n      console.log('Consequence uniqueId:', consequence.uniqueId);\n      return {\n        consequence_id: consequence.uniqueId,\n        // The unique identifier for this consequence\n        event: event.name,\n        event_id: event.id,\n        hazard: hazard.description,\n        hazard_id: hazard.id,\n        consequence: consequence.description,\n        current_controls: consequence.current_controls,\n        probability: '',\n        severity: '',\n        likelihood: '',\n        impact: '',\n        tolerability: ''\n      };\n    })))\n  }));\n\n  // Create form with local state\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    reset\n  } = useForm({\n    defaultValues: formData\n  });\n\n  // Watch form changes and auto-save\n  const watchAllFields = watch();\n  useEffect(() => {\n    const saveData = async () => {\n      try {\n        var _currentData$assessme;\n        const currentData = watchAllFields;\n        if (!(currentData !== null && currentData !== void 0 && (_currentData$assessme = currentData.assessments) !== null && _currentData$assessme !== void 0 && _currentData$assessme.length)) return;\n\n        // Filter out incomplete assessments\n        const validAssessments = currentData.assessments.filter(assessment => {\n          if (matrixType === 'ICAO') {\n            return assessment.probability && assessment.severity;\n          } else {\n            return assessment.likelihood && assessment.impact;\n          }\n        });\n        if (validAssessments.length > 0) {\n          await setStepData(3, {\n            assessments: validAssessments\n          });\n        }\n      } catch (error) {\n        console.error('Error auto-saving:', error);\n      }\n    };\n\n    // Debounce save to prevent too many requests\n    const timeoutId = setTimeout(saveData, 1000);\n    return () => clearTimeout(timeoutId);\n  }, [watchAllFields, setStepData, matrixType]);\n\n  // Load existing assessments when component mounts or when riskAssessmentData changes\n  useEffect(() => {\n    const loadExistingAssessments = async () => {\n      if (!(currentProject !== null && currentProject !== void 0 && currentProject.id)) return;\n      try {\n        setLocalError(null);\n\n        // If we have data in the store, use that\n        if (riskAssessmentData !== null && riskAssessmentData !== void 0 && riskAssessmentData.assessments) {\n          var _riskAssessmentData$a;\n          console.log('Using stored assessments:', riskAssessmentData.assessments);\n\n          // Find matching assessments by consequence_id\n          const formAssessments = watch('assessments');\n          console.log('Form assessments:', formAssessments);\n          riskAssessmentData.assessments.forEach(assessment => {\n            const index = formAssessments.findIndex(a => a.consequence_id === assessment.consequence_id);\n            console.log('Found assessment at index:', index, 'for consequence_id:', assessment.consequence_id);\n            if (index !== -1) {\n              setValue(`assessments.${index}.probability`, assessment.probability);\n              setValue(`assessments.${index}.severity`, assessment.severity);\n              setValue(`assessments.${index}.likelihood`, assessment.likelihood);\n              setValue(`assessments.${index}.impact`, assessment.impact);\n              setValue(`assessments.${index}.tolerability`, assessment.tolerability);\n            }\n          });\n          if ((_riskAssessmentData$a = riskAssessmentData.assessments[0]) !== null && _riskAssessmentData$a !== void 0 && _riskAssessmentData$a.matrixType) {\n            setMatrixType(riskAssessmentData.assessments[0].matrixType);\n          }\n          return;\n        }\n\n        // Load assessments for each consequence\n        const formAssessments = watch('assessments');\n        for (const assessment of formAssessments) {\n          const existingAssessment = await getAssessmentsByConsequenceId(assessment.consequence_id);\n          if (existingAssessment) {\n            const index = formAssessments.findIndex(a => a.consequence_id === existingAssessment.consequence_id);\n            if (index !== -1) {\n              setValue(`assessments.${index}.probability`, existingAssessment.probability);\n              setValue(`assessments.${index}.severity`, existingAssessment.severity);\n              setValue(`assessments.${index}.likelihood`, existingAssessment.likelihood);\n              setValue(`assessments.${index}.impact`, existingAssessment.impact);\n              setValue(`assessments.${index}.tolerability`, existingAssessment.tolerability);\n\n              // Set matrix type from first assessment\n              if (existingAssessment.matrix_type) {\n                setMatrixType(existingAssessment.matrix_type);\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error loading existing assessments:', error);\n        setLocalError('Failed to load existing assessments. Please try again.');\n      }\n    };\n    loadExistingAssessments();\n  }, [currentProject === null || currentProject === void 0 ? void 0 : currentProject.id, setValue, setMatrixType, riskAssessmentData, watch]);\n  const watchAssessments = watch('assessments') || [];\n  console.log('Watched assessments:', watchAssessments);\n\n  // Group assessments by event\n  const groupedAssessments = watchAssessments.reduce((acc, assessment) => {\n    if (!acc[assessment.event_id]) {\n      acc[assessment.event_id] = {\n        event: assessment.event,\n        assessments: []\n      };\n    }\n    acc[assessment.event_id].assessments.push(assessment);\n    return acc;\n  }, {});\n  const handleFormSubmit = async data => {\n    try {\n      setIsSubmitting(true);\n      setLocalError(null);\n\n      // Check if we have a current project\n      if (!(currentProject !== null && currentProject !== void 0 && currentProject.id)) {\n        throw new Error('No active project found. Please ensure the project is created first.');\n      }\n\n      // Validate that all required fields are filled\n      const hasEmptyFields = data.assessments.some(assessment => {\n        if (!assessment.consequence_id) {\n          console.error('Missing consequence_id for assessment:', assessment);\n          return true;\n        }\n        if (matrixType === 'ICAO') {\n          return !assessment.probability || !assessment.severity;\n        } else {\n          return !assessment.likelihood || !assessment.impact;\n        }\n      });\n      if (hasEmptyFields) {\n        throw new Error('Please fill in all required fields for each assessment.');\n      }\n      console.log('Submitting form data:', data);\n      console.log('Assessments with consequence_ids:', data.assessments.map(a => ({\n        consequence_id: a.consequence_id,\n        event: a.event,\n        hazard: a.hazard\n      })));\n\n      // Format and validate the data before submitting\n      const formattedData = {\n        assessments: data.assessments.map(assessment => ({\n          consequence_id: assessment.consequence_id,\n          event: assessment.event,\n          event_id: assessment.event_id,\n          hazard: assessment.hazard,\n          hazard_id: assessment.hazard_id,\n          consequence: assessment.consequence,\n          current_controls: assessment.current_controls,\n          probability: assessment.probability ? parseInt(assessment.probability) : null,\n          severity: assessment.severity || null,\n          likelihood: assessment.likelihood ? parseInt(assessment.likelihood) : null,\n          impact: assessment.impact ? parseInt(assessment.impact) : null,\n          tolerability: assessment.tolerability || null\n        }))\n      };\n      console.log('Formatted data:', formattedData);\n\n      // Save assessments with matrix type\n      const result = await updateAssessments(currentProject.id, formattedData, matrixType);\n      console.log('Save result:', result);\n\n      // Update store\n      const saved = await setStepData(3, result);\n      if (!saved) {\n        throw new Error('Failed to save risk assessment data');\n      }\n\n      // Navigate to next step\n      setCurrentStep(4);\n    } catch (error) {\n      console.error('Error saving risk assessments:', error);\n      setLocalError(error.message || 'Failed to save risk assessments. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Only render AssessmentForm if we have assessments\n  const hasAssessments = Object.keys(groupedAssessments).length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Risk Assessment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RiskMatrixSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RiskMatrixReference, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), (storeError || localError) && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: localError || storeError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), hasAssessments ? /*#__PURE__*/_jsxDEV(AssessmentForm, {\n      groupedAssessments: groupedAssessments,\n      setValue: setValue,\n      onSubmit: handleSubmit(handleFormSubmit),\n      isSubmitting: isSubmitting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-center\",\n        children: \"No hazards or consequences found. Please add hazards in the previous step.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(RiskAssessment, \"9/p9wcBsNucYSdvWala51ZY7sfc=\", false, function () {\n  return [useProjectStore, useRiskMatrixStore, useForm];\n});\n_c2 = RiskAssessment;\nvar _c, _c2;\n$RefreshReg$(_c, \"ErrorAlert\");\n$RefreshReg$(_c2, \"RiskAssessment\");","map":{"version":3,"names":["React","useEffect","useState","useForm","RiskMatrixSelector","RiskMatrixReference","AssessmentForm","useProjectStore","useRiskMatrixStore","updateAssessments","getAssessmentsByConsequenceId","jsxDEV","_jsxDEV","ErrorAlert","message","className","children","viewBox","fill","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","_c","RiskAssessment","_s","currentProject","hazardIdentificationData","riskAssessmentData","setStepData","setCurrentStep","error","storeError","matrixType","setMatrixType","isSubmitting","setIsSubmitting","localError","setLocalError","events","console","log","formData","setFormData","assessments","flatMap","event","hazards","hazard","consequences","map","consequence","id","uniqueId","consequence_id","name","event_id","description","hazard_id","current_controls","probability","severity","likelihood","impact","tolerability","register","handleSubmit","watch","setValue","reset","defaultValues","watchAllFields","saveData","_currentData$assessme","currentData","length","validAssessments","filter","assessment","timeoutId","setTimeout","clearTimeout","loadExistingAssessments","_riskAssessmentData$a","formAssessments","forEach","index","findIndex","a","existingAssessment","matrix_type","watchAssessments","groupedAssessments","reduce","acc","push","handleFormSubmit","data","Error","hasEmptyFields","some","formattedData","parseInt","result","saved","hasAssessments","Object","keys","onSubmit","_c2","$RefreshReg$"],"sources":["C:/Users/tmh73/Aviation Synergy/MaXwell AI - General/HIRA_25/src/components/RiskAssessment.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport RiskMatrixSelector from './RiskMatrixSelector';\nimport RiskMatrixReference from './RiskMatrixReference';\nimport AssessmentForm from './AssessmentForm';\nimport useProjectStore from '../stores/projectStore';\nimport { useRiskMatrixStore } from '../stores/riskMatrixStore';\nimport { updateAssessments, getAssessmentsByConsequenceId } from '../services/riskAssessmentService';\n\n// Error Alert Component\nconst ErrorAlert = ({ message }) => {\n  if (!message) return null;\n\n  return (\n    <div className=\"p-4 mb-4 bg-red-50 border border-red-200 rounded-lg\">\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0\">\n          <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n          </svg>\n        </div>\n        <div className=\"ml-3\">\n          <p className=\"text-sm text-red-700\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function RiskAssessment() {\n  const { currentProject, hazardIdentificationData, riskAssessmentData, setStepData, setCurrentStep, error: storeError } = useProjectStore();\n  const { matrixType, setMatrixType } = useRiskMatrixStore();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [localError, setLocalError] = useState(null);\n  const events = hazardIdentificationData?.events || [];\n\n  console.log('Initial events:', events);\n\n  // Local state for form data\n  const [formData, setFormData] = useState(() => ({\n    assessments: events.flatMap(event =>\n      (event.hazards || []).flatMap(hazard =>\n        (hazard.consequences || []).map(consequence => {\n          console.log('Setting up consequence:', consequence);\n          console.log('Consequence ID:', consequence.id);\n          console.log('Consequence uniqueId:', consequence.uniqueId);\n          return {\n            consequence_id: consequence.uniqueId, // The unique identifier for this consequence\n            event: event.name,\n            event_id: event.id,\n            hazard: hazard.description,\n            hazard_id: hazard.id,\n            consequence: consequence.description,\n            current_controls: consequence.current_controls,\n            probability: '',\n            severity: '',\n            likelihood: '',\n            impact: '',\n            tolerability: ''\n          };\n        })\n      )\n    )\n  }));\n\n  // Create form with local state\n  const { register, handleSubmit, watch, setValue, reset } = useForm({\n    defaultValues: formData\n  });\n\n  // Watch form changes and auto-save\n  const watchAllFields = watch();\n  useEffect(() => {\n    const saveData = async () => {\n      try {\n        const currentData = watchAllFields;\n        if (!currentData?.assessments?.length) return;\n\n        // Filter out incomplete assessments\n        const validAssessments = currentData.assessments.filter(assessment => {\n          if (matrixType === 'ICAO') {\n            return assessment.probability && assessment.severity;\n          } else {\n            return assessment.likelihood && assessment.impact;\n          }\n        });\n\n        if (validAssessments.length > 0) {\n          await setStepData(3, { assessments: validAssessments });\n        }\n      } catch (error) {\n        console.error('Error auto-saving:', error);\n      }\n    };\n\n    // Debounce save to prevent too many requests\n    const timeoutId = setTimeout(saveData, 1000);\n    return () => clearTimeout(timeoutId);\n  }, [watchAllFields, setStepData, matrixType]);\n\n  // Load existing assessments when component mounts or when riskAssessmentData changes\n  useEffect(() => {\n    const loadExistingAssessments = async () => {\n      if (!currentProject?.id) return;\n\n      try {\n        setLocalError(null);\n\n        // If we have data in the store, use that\n        if (riskAssessmentData?.assessments) {\n          console.log('Using stored assessments:', riskAssessmentData.assessments);\n          \n          // Find matching assessments by consequence_id\n          const formAssessments = watch('assessments');\n          console.log('Form assessments:', formAssessments);\n\n          riskAssessmentData.assessments.forEach(assessment => {\n            const index = formAssessments.findIndex(a => a.consequence_id === assessment.consequence_id);\n            console.log('Found assessment at index:', index, 'for consequence_id:', assessment.consequence_id);\n            \n            if (index !== -1) {\n              setValue(`assessments.${index}.probability`, assessment.probability);\n              setValue(`assessments.${index}.severity`, assessment.severity);\n              setValue(`assessments.${index}.likelihood`, assessment.likelihood);\n              setValue(`assessments.${index}.impact`, assessment.impact);\n              setValue(`assessments.${index}.tolerability`, assessment.tolerability);\n            }\n          });\n\n          if (riskAssessmentData.assessments[0]?.matrixType) {\n            setMatrixType(riskAssessmentData.assessments[0].matrixType);\n          }\n          return;\n        }\n\n        // Load assessments for each consequence\n        const formAssessments = watch('assessments');\n        for (const assessment of formAssessments) {\n          const existingAssessment = await getAssessmentsByConsequenceId(assessment.consequence_id);\n          if (existingAssessment) {\n            const index = formAssessments.findIndex(a => a.consequence_id === existingAssessment.consequence_id);\n            if (index !== -1) {\n              setValue(`assessments.${index}.probability`, existingAssessment.probability);\n              setValue(`assessments.${index}.severity`, existingAssessment.severity);\n              setValue(`assessments.${index}.likelihood`, existingAssessment.likelihood);\n              setValue(`assessments.${index}.impact`, existingAssessment.impact);\n              setValue(`assessments.${index}.tolerability`, existingAssessment.tolerability);\n\n              // Set matrix type from first assessment\n              if (existingAssessment.matrix_type) {\n                setMatrixType(existingAssessment.matrix_type);\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error loading existing assessments:', error);\n        setLocalError('Failed to load existing assessments. Please try again.');\n      }\n    };\n\n    loadExistingAssessments();\n  }, [currentProject?.id, setValue, setMatrixType, riskAssessmentData, watch]);\n\n  const watchAssessments = watch('assessments') || [];\n  console.log('Watched assessments:', watchAssessments);\n\n  // Group assessments by event\n  const groupedAssessments = watchAssessments.reduce((acc, assessment) => {\n    if (!acc[assessment.event_id]) {\n      acc[assessment.event_id] = {\n        event: assessment.event,\n        assessments: []\n      };\n    }\n    acc[assessment.event_id].assessments.push(assessment);\n    return acc;\n  }, {});\n\n  const handleFormSubmit = async (data) => {\n    try {\n      setIsSubmitting(true);\n      setLocalError(null);\n\n      // Check if we have a current project\n      if (!currentProject?.id) {\n        throw new Error('No active project found. Please ensure the project is created first.');\n      }\n\n      // Validate that all required fields are filled\n      const hasEmptyFields = data.assessments.some(assessment => {\n        if (!assessment.consequence_id) {\n          console.error('Missing consequence_id for assessment:', assessment);\n          return true;\n        }\n        if (matrixType === 'ICAO') {\n          return !assessment.probability || !assessment.severity;\n        } else {\n          return !assessment.likelihood || !assessment.impact;\n        }\n      });\n\n      if (hasEmptyFields) {\n        throw new Error('Please fill in all required fields for each assessment.');\n      }\n\n      console.log('Submitting form data:', data);\n      console.log('Assessments with consequence_ids:', data.assessments.map(a => ({\n        consequence_id: a.consequence_id,\n        event: a.event,\n        hazard: a.hazard\n      })));\n      \n      // Format and validate the data before submitting\n      const formattedData = {\n        assessments: data.assessments.map(assessment => ({\n          consequence_id: assessment.consequence_id,\n          event: assessment.event,\n          event_id: assessment.event_id,\n          hazard: assessment.hazard,\n          hazard_id: assessment.hazard_id,\n          consequence: assessment.consequence,\n          current_controls: assessment.current_controls,\n          probability: assessment.probability ? parseInt(assessment.probability) : null,\n          severity: assessment.severity || null,\n          likelihood: assessment.likelihood ? parseInt(assessment.likelihood) : null,\n          impact: assessment.impact ? parseInt(assessment.impact) : null,\n          tolerability: assessment.tolerability || null\n        }))\n      };\n\n      console.log('Formatted data:', formattedData);\n      \n      // Save assessments with matrix type\n      const result = await updateAssessments(currentProject.id, formattedData, matrixType);\n      console.log('Save result:', result);\n      \n      // Update store\n      const saved = await setStepData(3, result);\n      if (!saved) {\n        throw new Error('Failed to save risk assessment data');\n      }\n\n      // Navigate to next step\n      setCurrentStep(4);\n    } catch (error) {\n      console.error('Error saving risk assessments:', error);\n      setLocalError(error.message || 'Failed to save risk assessments. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Only render AssessmentForm if we have assessments\n  const hasAssessments = Object.keys(groupedAssessments).length > 0;\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Risk Assessment</h2>\n        <RiskMatrixSelector />\n        <RiskMatrixReference />\n      </div>\n\n      {(storeError || localError) && (\n        <ErrorAlert message={localError || storeError} />\n      )}\n\n      {hasAssessments ? (\n        <AssessmentForm \n          groupedAssessments={groupedAssessments}\n          setValue={setValue}\n          onSubmit={handleSubmit(handleFormSubmit)}\n          isSubmitting={isSubmitting}\n        />\n      ) : (\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <p className=\"text-gray-600 text-center\">\n            No hazards or consequences found. Please add hazards in the previous step.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}