{"ast":null,"code":"import{create}from'zustand';import{supabase}from'../services/supabase';const useProjectStore=create((set,get)=>({projects:[],currentProject:null,currentStep:0,isLoading:false,error:null,setCurrentProject:project=>{// Ensure operational_files is always an array\nconst projectWithFiles={...project,operational_files:(project===null||project===void 0?void 0:project.operational_files)||[]};set({currentProject:projectWithFiles});},setCurrentStep:step=>set({currentStep:step}),clearError:()=>set({error:null}),setLoading:isLoading=>set({isLoading}),loadProjects:async()=>{set({isLoading:true,error:null});try{const{data,error}=await supabase.from('hira_projects').select('*').order('created_at',{ascending:false});if(error)throw error;// Ensure operational_files is always an array for each project\nconst projectsWithFiles=(data===null||data===void 0?void 0:data.map(project=>({...project,operational_files:project.operational_files||[]})))||[];set({projects:projectsWithFiles});}catch(error){console.error('Load projects error:',error);set({error:error.message});}finally{set({isLoading:false});}},createProject:async projectData=>{set({isLoading:true,error:null});try{const formattedData={project_id:projectData.projectId,title:projectData.title,date:projectData.date,facilitator:projectData.facilitator,attendees:projectData.attendees||[],operational_desc:projectData.operational_desc,operational_files:projectData.operational_files||[]};const{data,error}=await supabase.from('hira_projects').insert([formattedData]).select().single();if(error)throw error;const projectWithFiles={...data,operational_files:data.operational_files||[]};set(state=>({projects:[projectWithFiles,...state.projects],currentProject:projectWithFiles}));return projectWithFiles;}catch(error){console.error('Create project error:',error);set({error:error.message});throw error;}finally{set({isLoading:false});}},updateProject:async(projectId,projectData)=>{set({isLoading:true,error:null});try{const formattedData={title:projectData.title,date:projectData.date,facilitator:projectData.facilitator,attendees:projectData.attendees||[],operational_desc:projectData.operational_desc,operational_files:projectData.operational_files||[]};// Try to update using project_id first\nconst{data,error}=await supabase.from('hira_projects').update(formattedData).eq('project_id',projectId).select().single();if(error){console.error('Update by project_id failed:',error);// If project_id update fails, try updating by id\nconst currentProject=get().currentProject;if(!(currentProject!==null&&currentProject!==void 0&&currentProject.id)){throw new Error('Project not found');}const{data:dataById,error:errorById}=await supabase.from('hira_projects').update(formattedData).eq('id',currentProject.id).select().single();if(errorById)throw errorById;const projectWithFiles={...dataById,operational_files:dataById.operational_files||[]};set(state=>({projects:state.projects.map(p=>p.id===currentProject.id?projectWithFiles:p),currentProject:projectWithFiles}));return projectWithFiles;}const projectWithFiles={...data,operational_files:data.operational_files||[]};set(state=>({projects:state.projects.map(p=>p.project_id===projectId?projectWithFiles:p),currentProject:projectWithFiles}));return projectWithFiles;}catch(error){console.error('Update project error:',error);set({error:error.message});throw error;}finally{set({isLoading:false});}},deleteProject:async projectId=>{set({isLoading:true,error:null});try{// Try to delete using project_id first\nconst{error}=await supabase.from('hira_projects').delete().eq('project_id',projectId);if(error){console.error('Delete by project_id failed:',error);// If project_id delete fails, try deleting by id\nconst currentProject=get().currentProject;if(!(currentProject!==null&&currentProject!==void 0&&currentProject.id)){throw new Error('Project not found');}const{error:errorById}=await supabase.from('hira_projects').delete().eq('id',currentProject.id);if(errorById)throw errorById;set(state=>({projects:state.projects.filter(p=>p.id!==currentProject.id),currentProject:null}));return;}set(state=>({projects:state.projects.filter(p=>p.project_id!==projectId),currentProject:null}));}catch(error){console.error('Delete project error:',error);set({error:error.message});throw error;}finally{set({isLoading:false});}}}));export default useProjectStore;","map":{"version":3,"names":["create","supabase","useProjectStore","set","get","projects","currentProject","currentStep","isLoading","error","setCurrentProject","project","projectWithFiles","operational_files","setCurrentStep","step","clearError","setLoading","loadProjects","data","from","select","order","ascending","projectsWithFiles","map","console","message","createProject","projectData","formattedData","project_id","projectId","title","date","facilitator","attendees","operational_desc","insert","single","state","updateProject","update","eq","id","Error","dataById","errorById","p","deleteProject","delete","filter"],"sources":["C:/Users/tmh73/Aviation Synergy/MaXwell AI - General/HIRA_AppBolt/src-new/src/stores/projectStore.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport { supabase } from '../services/supabase';\r\n\r\nconst useProjectStore = create((set, get) => ({\r\n  projects: [],\r\n  currentProject: null,\r\n  currentStep: 0,\r\n  isLoading: false,\r\n  error: null,\r\n\r\n  setCurrentProject: (project) => {\r\n    // Ensure operational_files is always an array\r\n    const projectWithFiles = {\r\n      ...project,\r\n      operational_files: project?.operational_files || []\r\n    };\r\n    set({ currentProject: projectWithFiles });\r\n  },\r\n  \r\n  setCurrentStep: (step) => set({ currentStep: step }),\r\n  clearError: () => set({ error: null }),\r\n  setLoading: (isLoading) => set({ isLoading }),\r\n\r\n  loadProjects: async () => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('hira_projects')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      // Ensure operational_files is always an array for each project\r\n      const projectsWithFiles = data?.map(project => ({\r\n        ...project,\r\n        operational_files: project.operational_files || []\r\n      })) || [];\r\n\r\n      set({ projects: projectsWithFiles });\r\n    } catch (error) {\r\n      console.error('Load projects error:', error);\r\n      set({ error: error.message });\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  },\r\n\r\n  createProject: async (projectData) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const formattedData = {\r\n        project_id: projectData.projectId,\r\n        title: projectData.title,\r\n        date: projectData.date,\r\n        facilitator: projectData.facilitator,\r\n        attendees: projectData.attendees || [],\r\n        operational_desc: projectData.operational_desc,\r\n        operational_files: projectData.operational_files || []\r\n      };\r\n\r\n      const { data, error } = await supabase\r\n        .from('hira_projects')\r\n        .insert([formattedData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      const projectWithFiles = {\r\n        ...data,\r\n        operational_files: data.operational_files || []\r\n      };\r\n\r\n      set((state) => ({\r\n        projects: [projectWithFiles, ...state.projects],\r\n        currentProject: projectWithFiles\r\n      }));\r\n\r\n      return projectWithFiles;\r\n    } catch (error) {\r\n      console.error('Create project error:', error);\r\n      set({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  },\r\n\r\n  updateProject: async (projectId, projectData) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      const formattedData = {\r\n        title: projectData.title,\r\n        date: projectData.date,\r\n        facilitator: projectData.facilitator,\r\n        attendees: projectData.attendees || [],\r\n        operational_desc: projectData.operational_desc,\r\n        operational_files: projectData.operational_files || []\r\n      };\r\n\r\n      // Try to update using project_id first\r\n      const { data, error } = await supabase\r\n        .from('hira_projects')\r\n        .update(formattedData)\r\n        .eq('project_id', projectId)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error('Update by project_id failed:', error);\r\n        // If project_id update fails, try updating by id\r\n        const currentProject = get().currentProject;\r\n        if (!currentProject?.id) {\r\n          throw new Error('Project not found');\r\n        }\r\n\r\n        const { data: dataById, error: errorById } = await supabase\r\n          .from('hira_projects')\r\n          .update(formattedData)\r\n          .eq('id', currentProject.id)\r\n          .select()\r\n          .single();\r\n\r\n        if (errorById) throw errorById;\r\n        \r\n        const projectWithFiles = {\r\n          ...dataById,\r\n          operational_files: dataById.operational_files || []\r\n        };\r\n\r\n        set((state) => ({\r\n          projects: state.projects.map((p) =>\r\n            p.id === currentProject.id ? projectWithFiles : p\r\n          ),\r\n          currentProject: projectWithFiles\r\n        }));\r\n\r\n        return projectWithFiles;\r\n      }\r\n\r\n      const projectWithFiles = {\r\n        ...data,\r\n        operational_files: data.operational_files || []\r\n      };\r\n\r\n      set((state) => ({\r\n        projects: state.projects.map((p) =>\r\n          p.project_id === projectId ? projectWithFiles : p\r\n        ),\r\n        currentProject: projectWithFiles\r\n      }));\r\n\r\n      return projectWithFiles;\r\n    } catch (error) {\r\n      console.error('Update project error:', error);\r\n      set({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  },\r\n\r\n  deleteProject: async (projectId) => {\r\n    set({ isLoading: true, error: null });\r\n    try {\r\n      // Try to delete using project_id first\r\n      const { error } = await supabase\r\n        .from('hira_projects')\r\n        .delete()\r\n        .eq('project_id', projectId);\r\n\r\n      if (error) {\r\n        console.error('Delete by project_id failed:', error);\r\n        // If project_id delete fails, try deleting by id\r\n        const currentProject = get().currentProject;\r\n        if (!currentProject?.id) {\r\n          throw new Error('Project not found');\r\n        }\r\n\r\n        const { error: errorById } = await supabase\r\n          .from('hira_projects')\r\n          .delete()\r\n          .eq('id', currentProject.id);\r\n\r\n        if (errorById) throw errorById;\r\n\r\n        set((state) => ({\r\n          projects: state.projects.filter((p) => p.id !== currentProject.id),\r\n          currentProject: null\r\n        }));\r\n        return;\r\n      }\r\n\r\n      set((state) => ({\r\n        projects: state.projects.filter((p) => p.project_id !== projectId),\r\n        currentProject: null\r\n      }));\r\n    } catch (error) {\r\n      console.error('Delete project error:', error);\r\n      set({ error: error.message });\r\n      throw error;\r\n    } finally {\r\n      set({ isLoading: false });\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useProjectStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}