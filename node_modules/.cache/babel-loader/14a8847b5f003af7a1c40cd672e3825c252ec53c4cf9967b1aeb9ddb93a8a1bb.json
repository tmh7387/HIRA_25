{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';const supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;if(!supabaseUrl||!supabaseAnonKey){throw new Error('Missing Supabase environment variables');}export const supabase=createClient(supabaseUrl,supabaseAnonKey);// Test connection and log status\nsupabase.from('hira_projects').select('count',{count:'exact',head:true}).then(_ref=>{let{error}=_ref;if(error){console.error('Supabase connection error:',error.message);}else{console.log('Successfully connected to Supabase');}}).catch(err=>{console.error('Failed to test Supabase connection:',err.message);});// Constants for file upload limits\nconst MAX_FILES=5;const MAX_TOTAL_SIZE=50*1024*1024;// 50MB in bytes\nconst BUCKET_NAME='hira-files';const SUBFOLDER='operational-images';// Helper function to validate files\nexport const validateFiles=function(newFiles){let existingFiles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];console.log('Validating files:',{newFiles:newFiles.map(f=>({name:f.name,size:f.size})),existingFiles:existingFiles.map(f=>({name:f.name,size:f.size}))});const totalFiles=existingFiles.length+newFiles.length;if(totalFiles>MAX_FILES){console.error('File count validation failed:',{totalFiles,MAX_FILES});throw new Error(`Maximum ${MAX_FILES} files allowed`);}const existingSize=existingFiles.reduce((total,file)=>total+(file.size||0),0);const newSize=newFiles.reduce((total,file)=>total+file.size,0);const totalSize=existingSize+newSize;console.log('Size validation:',{existingSize:formatFileSize(existingSize),newSize:formatFileSize(newSize),totalSize:formatFileSize(totalSize),maxSize:formatFileSize(MAX_TOTAL_SIZE)});if(totalSize>MAX_TOTAL_SIZE){console.error('File size validation failed:',{totalSize,MAX_TOTAL_SIZE});throw new Error(`Total file size cannot exceed 50MB`);}console.log('File validation passed');return true;};// Helper functions for common operations\nexport const uploadFile=async function(file){let existingFiles=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];console.log('Starting file upload:',{fileName:file.name,fileSize:formatFileSize(file.size),fileType:file.type});try{// Validate the new file\nvalidateFiles([file],existingFiles);const fileExt=file.name.split('.').pop();const fileName=`${Date.now()}.${fileExt}`;const filePath=`${SUBFOLDER}/${fileName}`;console.log('Uploading file to Supabase:',{bucket:BUCKET_NAME,filePath,fileSize:formatFileSize(file.size)});// Upload the file\nconst{data,error}=await supabase.storage.from(BUCKET_NAME).upload(filePath,file,{cacheControl:'3600',upsert:false});if(error){console.error('Supabase upload error:',error);throw error;}console.log('File uploaded successfully:',{filePath,data});// Get the public URL\nconst{data:{publicUrl}}=supabase.storage.from(BUCKET_NAME).getPublicUrl(filePath);console.log('Generated public URL:',publicUrl);return{url:publicUrl,path:filePath,name:file.name,size:file.size,type:file.type};}catch(error){console.error('File upload error:',error);throw error;}};export const deleteFile=async path=>{console.log('Attempting to delete file:',path);try{if(!path.startsWith(SUBFOLDER)){path=`${SUBFOLDER}/${path}`;}console.log('Deleting file from Supabase:',{bucket:BUCKET_NAME,path});const{error}=await supabase.storage.from(BUCKET_NAME).remove([path]);if(error){console.error('Supabase delete error:',error);throw error;}console.log('File deleted successfully');}catch(error){console.error('File deletion error:',error);throw error;}};// Helper function to get file size in readable format\nexport const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","Error","supabase","from","select","count","head","then","_ref","error","console","message","log","catch","err","MAX_FILES","MAX_TOTAL_SIZE","BUCKET_NAME","SUBFOLDER","validateFiles","newFiles","existingFiles","arguments","length","undefined","map","f","name","size","totalFiles","existingSize","reduce","total","file","newSize","totalSize","formatFileSize","maxSize","uploadFile","fileName","fileSize","fileType","type","fileExt","split","pop","Date","now","filePath","bucket","data","storage","upload","cacheControl","upsert","publicUrl","getPublicUrl","url","path","deleteFile","startsWith","remove","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed"],"sources":["C:/Users/tmh73/Aviation Synergy/MaXwell AI - General/HIRA_AppBolt/src-new/src/services/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error('Missing Supabase environment variables');\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\n// Test connection and log status\r\nsupabase.from('hira_projects')\r\n  .select('count', { count: 'exact', head: true })\r\n  .then(({ error }) => {\r\n    if (error) {\r\n      console.error('Supabase connection error:', error.message);\r\n    } else {\r\n      console.log('Successfully connected to Supabase');\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.error('Failed to test Supabase connection:', err.message);\r\n  });\r\n\r\n// Constants for file upload limits\r\nconst MAX_FILES = 5;\r\nconst MAX_TOTAL_SIZE = 50 * 1024 * 1024; // 50MB in bytes\r\nconst BUCKET_NAME = 'hira-files';\r\nconst SUBFOLDER = 'operational-images';\r\n\r\n// Helper function to validate files\r\nexport const validateFiles = (newFiles, existingFiles = []) => {\r\n  console.log('Validating files:', { \r\n    newFiles: newFiles.map(f => ({ name: f.name, size: f.size })),\r\n    existingFiles: existingFiles.map(f => ({ name: f.name, size: f.size }))\r\n  });\r\n\r\n  const totalFiles = existingFiles.length + newFiles.length;\r\n  if (totalFiles > MAX_FILES) {\r\n    console.error('File count validation failed:', { totalFiles, MAX_FILES });\r\n    throw new Error(`Maximum ${MAX_FILES} files allowed`);\r\n  }\r\n\r\n  const existingSize = existingFiles.reduce((total, file) => total + (file.size || 0), 0);\r\n  const newSize = newFiles.reduce((total, file) => total + file.size, 0);\r\n  const totalSize = existingSize + newSize;\r\n\r\n  console.log('Size validation:', { \r\n    existingSize: formatFileSize(existingSize),\r\n    newSize: formatFileSize(newSize),\r\n    totalSize: formatFileSize(totalSize),\r\n    maxSize: formatFileSize(MAX_TOTAL_SIZE)\r\n  });\r\n\r\n  if (totalSize > MAX_TOTAL_SIZE) {\r\n    console.error('File size validation failed:', { totalSize, MAX_TOTAL_SIZE });\r\n    throw new Error(`Total file size cannot exceed 50MB`);\r\n  }\r\n\r\n  console.log('File validation passed');\r\n  return true;\r\n};\r\n\r\n// Helper functions for common operations\r\nexport const uploadFile = async (file, existingFiles = []) => {\r\n  console.log('Starting file upload:', { \r\n    fileName: file.name,\r\n    fileSize: formatFileSize(file.size),\r\n    fileType: file.type\r\n  });\r\n\r\n  try {\r\n    // Validate the new file\r\n    validateFiles([file], existingFiles);\r\n\r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${Date.now()}.${fileExt}`;\r\n    const filePath = `${SUBFOLDER}/${fileName}`;\r\n\r\n    console.log('Uploading file to Supabase:', { \r\n      bucket: BUCKET_NAME,\r\n      filePath,\r\n      fileSize: formatFileSize(file.size)\r\n    });\r\n\r\n    // Upload the file\r\n    const { data, error } = await supabase.storage\r\n      .from(BUCKET_NAME)\r\n      .upload(filePath, file, {\r\n        cacheControl: '3600',\r\n        upsert: false\r\n      });\r\n\r\n    if (error) {\r\n      console.error('Supabase upload error:', error);\r\n      throw error;\r\n    }\r\n\r\n    console.log('File uploaded successfully:', { filePath, data });\r\n\r\n    // Get the public URL\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from(BUCKET_NAME)\r\n      .getPublicUrl(filePath);\r\n\r\n    console.log('Generated public URL:', publicUrl);\r\n\r\n    return {\r\n      url: publicUrl,\r\n      path: filePath,\r\n      name: file.name,\r\n      size: file.size,\r\n      type: file.type\r\n    };\r\n  } catch (error) {\r\n    console.error('File upload error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteFile = async (path) => {\r\n  console.log('Attempting to delete file:', path);\r\n\r\n  try {\r\n    if (!path.startsWith(SUBFOLDER)) {\r\n      path = `${SUBFOLDER}/${path}`;\r\n    }\r\n\r\n    console.log('Deleting file from Supabase:', { bucket: BUCKET_NAME, path });\r\n\r\n    const { error } = await supabase.storage\r\n      .from(BUCKET_NAME)\r\n      .remove([path]);\r\n\r\n    if (error) {\r\n      console.error('Supabase delete error:', error);\r\n      throw error;\r\n    }\r\n\r\n    console.log('File deleted successfully');\r\n  } catch (error) {\r\n    console.error('File deletion error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Helper function to get file size in readable format\r\nexport const formatFileSize = (bytes) => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}