{"ast":null,"code":"import { create } from 'zustand';\nconst useFormStore = create((set, get) => ({\n  // Project Details\n  projectDetails: null,\n  // Hazard Identification\n  hazards: null,\n  // Risk Assessment\n  assessments: null,\n  // Risk Controls\n  controls: null,\n  // Current Project\n  currentProject: null,\n  // Actions\n  setProjectDetails: details => {\n    console.log('Setting project details:', details); // Debug log\n    set({\n      projectDetails: details\n    });\n  },\n  setHazards: hazards => set({\n    hazards: hazards\n  }),\n  setAssessments: assessments => set({\n    assessments: assessments\n  }),\n  setControls: controls => set({\n    controls: controls\n  }),\n  setCurrentProject: project => {\n    console.log('Setting current project:', project); // Debug log\n    const projectDetails = project ? {\n      projectId: project.projectId,\n      title: project.title,\n      date: project.date,\n      facilitator: project.facilitator,\n      attendees: project.attendees || [],\n      operational_desc: project.operational_desc || '',\n      operational_files: Array.isArray(project.operational_files) ? project.operational_files : []\n    } : null;\n    console.log('Transformed project details:', projectDetails); // Debug log\n\n    set({\n      currentProject: project,\n      projectDetails: projectDetails,\n      hazards: project !== null && project !== void 0 && project.events ? {\n        events: project.events\n      } : null,\n      assessments: (project === null || project === void 0 ? void 0 : project.assessments) || null,\n      controls: (project === null || project === void 0 ? void 0 : project.controls) || null\n    });\n  },\n  // Reset form data\n  resetForm: () => set({\n    projectDetails: null,\n    hazards: null,\n    assessments: null,\n    controls: null,\n    currentProject: null\n  }),\n  // Load existing project data\n  loadProjectData: project => {\n    console.log('Loading project data:', project); // Debug log\n    const projectDetails = {\n      projectId: project.projectId,\n      title: project.title,\n      date: project.date,\n      facilitator: project.facilitator,\n      attendees: project.attendees || [],\n      operational_desc: project.operational_desc || '',\n      operational_files: Array.isArray(project.operational_files) ? project.operational_files : []\n    };\n    console.log('Transformed project details:', projectDetails); // Debug log\n\n    set({\n      currentProject: project,\n      projectDetails: projectDetails,\n      hazards: project.events ? {\n        events: project.events\n      } : null,\n      assessments: project.assessments || null,\n      controls: project.controls || null\n    });\n  },\n  // Update form data when navigating between steps\n  updateFormData: (step, data) => {\n    console.log('Updating form data for step:', step, 'with data:', data); // Debug log\n    const state = get();\n    switch (step) {\n      case 1:\n        // Project Details\n        const updatedDetails = {\n          ...data,\n          operational_files: Array.isArray(data.operational_files) ? data.operational_files : []\n        };\n        console.log('Updated project details:', updatedDetails); // Debug log\n        set({\n          projectDetails: updatedDetails,\n          currentProject: {\n            ...state.currentProject,\n            ...updatedDetails\n          }\n        });\n        break;\n      case 2:\n        // Hazard Identification\n        set({\n          hazards: data,\n          currentProject: {\n            ...state.currentProject,\n            events: data.events\n          }\n        });\n        break;\n      case 3:\n        // Risk Assessment\n        const formattedAssessments = Array.isArray(data) ? {\n          assessments: data\n        } : data !== null && data !== void 0 && data.assessments ? data : {\n          assessments: []\n        };\n        set({\n          assessments: formattedAssessments,\n          currentProject: {\n            ...state.currentProject,\n            assessments: formattedAssessments.assessments\n          }\n        });\n        break;\n      case 4:\n        // Risk Controls\n        set({\n          controls: data,\n          currentProject: {\n            ...state.currentProject,\n            controls: data\n          }\n        });\n        break;\n      default:\n        break;\n    }\n  },\n  // Get form data for a specific step\n  getFormData: step => {\n    var _state$currentProject, _state$currentProject2, _state$assessments, _state$currentProject3, _state$currentProject4;\n    const state = get();\n    let data;\n    switch (step) {\n      case 1:\n        data = state.projectDetails || {\n          ...state.currentProject,\n          operational_files: Array.isArray((_state$currentProject = state.currentProject) === null || _state$currentProject === void 0 ? void 0 : _state$currentProject.operational_files) ? state.currentProject.operational_files : []\n        };\n        console.log('Getting form data for step 1:', data); // Debug log\n        return data;\n      case 2:\n        return state.hazards || ((_state$currentProject2 = state.currentProject) !== null && _state$currentProject2 !== void 0 && _state$currentProject2.events ? {\n          events: state.currentProject.events\n        } : undefined);\n      case 3:\n        if ((_state$assessments = state.assessments) !== null && _state$assessments !== void 0 && _state$assessments.assessments) {\n          return state.assessments.assessments;\n        }\n        if ((_state$currentProject3 = state.currentProject) !== null && _state$currentProject3 !== void 0 && _state$currentProject3.assessments) {\n          return state.currentProject.assessments;\n        }\n        return [];\n      case 4:\n        return state.controls || ((_state$currentProject4 = state.currentProject) === null || _state$currentProject4 === void 0 ? void 0 : _state$currentProject4.controls);\n      default:\n        return null;\n    }\n  }\n}));\nexport default useFormStore;","map":{"version":3,"names":["create","useFormStore","set","get","projectDetails","hazards","assessments","controls","currentProject","setProjectDetails","details","console","log","setHazards","setAssessments","setControls","setCurrentProject","project","projectId","title","date","facilitator","attendees","operational_desc","operational_files","Array","isArray","events","resetForm","loadProjectData","updateFormData","step","data","state","updatedDetails","formattedAssessments","getFormData","_state$currentProject","_state$currentProject2","_state$assessments","_state$currentProject3","_state$currentProject4","undefined"],"sources":["C:/Users/tmh73/Aviation Synergy/MaXwell AI - General/HIRA_25/src/stores/formStore.js"],"sourcesContent":["import { create } from 'zustand';\r\n\r\nconst useFormStore = create((set, get) => ({\r\n  // Project Details\r\n  projectDetails: null,\r\n  \r\n  // Hazard Identification\r\n  hazards: null,\r\n  \r\n  // Risk Assessment\r\n  assessments: null,\r\n  \r\n  // Risk Controls\r\n  controls: null,\r\n\r\n  // Current Project\r\n  currentProject: null,\r\n\r\n  // Actions\r\n  setProjectDetails: (details) => {\r\n    console.log('Setting project details:', details); // Debug log\r\n    set({ projectDetails: details });\r\n  },\r\n  \r\n  setHazards: (hazards) => set({ hazards: hazards }),\r\n  \r\n  setAssessments: (assessments) => set({ assessments: assessments }),\r\n  \r\n  setControls: (controls) => set({ controls: controls }),\r\n  \r\n  setCurrentProject: (project) => {\r\n    console.log('Setting current project:', project); // Debug log\r\n    const projectDetails = project ? {\r\n      projectId: project.projectId,\r\n      title: project.title,\r\n      date: project.date,\r\n      facilitator: project.facilitator,\r\n      attendees: project.attendees || [],\r\n      operational_desc: project.operational_desc || '',\r\n      operational_files: Array.isArray(project.operational_files) ? project.operational_files : []\r\n    } : null;\r\n\r\n    console.log('Transformed project details:', projectDetails); // Debug log\r\n\r\n    set({ \r\n      currentProject: project,\r\n      projectDetails: projectDetails,\r\n      hazards: project?.events ? { events: project.events } : null,\r\n      assessments: project?.assessments || null,\r\n      controls: project?.controls || null\r\n    });\r\n  },\r\n\r\n  // Reset form data\r\n  resetForm: () => set({\r\n    projectDetails: null,\r\n    hazards: null,\r\n    assessments: null,\r\n    controls: null,\r\n    currentProject: null\r\n  }),\r\n\r\n  // Load existing project data\r\n  loadProjectData: (project) => {\r\n    console.log('Loading project data:', project); // Debug log\r\n    const projectDetails = {\r\n      projectId: project.projectId,\r\n      title: project.title,\r\n      date: project.date,\r\n      facilitator: project.facilitator,\r\n      attendees: project.attendees || [],\r\n      operational_desc: project.operational_desc || '',\r\n      operational_files: Array.isArray(project.operational_files) ? project.operational_files : []\r\n    };\r\n\r\n    console.log('Transformed project details:', projectDetails); // Debug log\r\n\r\n    set({\r\n      currentProject: project,\r\n      projectDetails: projectDetails,\r\n      hazards: project.events ? { events: project.events } : null,\r\n      assessments: project.assessments || null,\r\n      controls: project.controls || null\r\n    });\r\n  },\r\n\r\n  // Update form data when navigating between steps\r\n  updateFormData: (step, data) => {\r\n    console.log('Updating form data for step:', step, 'with data:', data); // Debug log\r\n    const state = get();\r\n    switch (step) {\r\n      case 1: // Project Details\r\n        const updatedDetails = {\r\n          ...data,\r\n          operational_files: Array.isArray(data.operational_files) ? data.operational_files : []\r\n        };\r\n        console.log('Updated project details:', updatedDetails); // Debug log\r\n        set({ \r\n          projectDetails: updatedDetails,\r\n          currentProject: {\r\n            ...state.currentProject,\r\n            ...updatedDetails\r\n          }\r\n        });\r\n        break;\r\n      case 2: // Hazard Identification\r\n        set({ \r\n          hazards: data,\r\n          currentProject: {\r\n            ...state.currentProject,\r\n            events: data.events\r\n          }\r\n        });\r\n        break;\r\n      case 3: // Risk Assessment\r\n        const formattedAssessments = Array.isArray(data) \r\n          ? { assessments: data }\r\n          : data?.assessments \r\n            ? data \r\n            : { assessments: [] };\r\n        set({ \r\n          assessments: formattedAssessments,\r\n          currentProject: {\r\n            ...state.currentProject,\r\n            assessments: formattedAssessments.assessments\r\n          }\r\n        });\r\n        break;\r\n      case 4: // Risk Controls\r\n        set({ \r\n          controls: data,\r\n          currentProject: {\r\n            ...state.currentProject,\r\n            controls: data\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n\r\n  // Get form data for a specific step\r\n  getFormData: (step) => {\r\n    const state = get();\r\n    let data;\r\n    switch (step) {\r\n      case 1:\r\n        data = state.projectDetails || {\r\n          ...state.currentProject,\r\n          operational_files: Array.isArray(state.currentProject?.operational_files) \r\n            ? state.currentProject.operational_files \r\n            : []\r\n        };\r\n        console.log('Getting form data for step 1:', data); // Debug log\r\n        return data;\r\n      case 2:\r\n        return state.hazards || (state.currentProject?.events ? { events: state.currentProject.events } : undefined);\r\n      case 3:\r\n        if (state.assessments?.assessments) {\r\n          return state.assessments.assessments;\r\n        }\r\n        if (state.currentProject?.assessments) {\r\n          return state.currentProject.assessments;\r\n        }\r\n        return [];\r\n      case 4:\r\n        return state.controls || state.currentProject?.controls;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useFormStore;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,MAAMC,YAAY,GAAGD,MAAM,CAAC,CAACE,GAAG,EAAEC,GAAG,MAAM;EACzC;EACAC,cAAc,EAAE,IAAI;EAEpB;EACAC,OAAO,EAAE,IAAI;EAEb;EACAC,WAAW,EAAE,IAAI;EAEjB;EACAC,QAAQ,EAAE,IAAI;EAEd;EACAC,cAAc,EAAE,IAAI;EAEpB;EACAC,iBAAiB,EAAGC,OAAO,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,OAAO,CAAC,CAAC,CAAC;IAClDR,GAAG,CAAC;MAAEE,cAAc,EAAEM;IAAQ,CAAC,CAAC;EAClC,CAAC;EAEDG,UAAU,EAAGR,OAAO,IAAKH,GAAG,CAAC;IAAEG,OAAO,EAAEA;EAAQ,CAAC,CAAC;EAElDS,cAAc,EAAGR,WAAW,IAAKJ,GAAG,CAAC;IAAEI,WAAW,EAAEA;EAAY,CAAC,CAAC;EAElES,WAAW,EAAGR,QAAQ,IAAKL,GAAG,CAAC;IAAEK,QAAQ,EAAEA;EAAS,CAAC,CAAC;EAEtDS,iBAAiB,EAAGC,OAAO,IAAK;IAC9BN,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,OAAO,CAAC,CAAC,CAAC;IAClD,MAAMb,cAAc,GAAGa,OAAO,GAAG;MAC/BC,SAAS,EAAED,OAAO,CAACC,SAAS;MAC5BC,KAAK,EAAEF,OAAO,CAACE,KAAK;MACpBC,IAAI,EAAEH,OAAO,CAACG,IAAI;MAClBC,WAAW,EAAEJ,OAAO,CAACI,WAAW;MAChCC,SAAS,EAAEL,OAAO,CAACK,SAAS,IAAI,EAAE;MAClCC,gBAAgB,EAAEN,OAAO,CAACM,gBAAgB,IAAI,EAAE;MAChDC,iBAAiB,EAAEC,KAAK,CAACC,OAAO,CAACT,OAAO,CAACO,iBAAiB,CAAC,GAAGP,OAAO,CAACO,iBAAiB,GAAG;IAC5F,CAAC,GAAG,IAAI;IAERb,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAER,cAAc,CAAC,CAAC,CAAC;;IAE7DF,GAAG,CAAC;MACFM,cAAc,EAAES,OAAO;MACvBb,cAAc,EAAEA,cAAc;MAC9BC,OAAO,EAAEY,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEU,MAAM,GAAG;QAAEA,MAAM,EAAEV,OAAO,CAACU;MAAO,CAAC,GAAG,IAAI;MAC5DrB,WAAW,EAAE,CAAAW,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEX,WAAW,KAAI,IAAI;MACzCC,QAAQ,EAAE,CAAAU,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEV,QAAQ,KAAI;IACjC,CAAC,CAAC;EACJ,CAAC;EAED;EACAqB,SAAS,EAAEA,CAAA,KAAM1B,GAAG,CAAC;IACnBE,cAAc,EAAE,IAAI;IACpBC,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE,IAAI;IACjBC,QAAQ,EAAE,IAAI;IACdC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF;EACAqB,eAAe,EAAGZ,OAAO,IAAK;IAC5BN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEK,OAAO,CAAC,CAAC,CAAC;IAC/C,MAAMb,cAAc,GAAG;MACrBc,SAAS,EAAED,OAAO,CAACC,SAAS;MAC5BC,KAAK,EAAEF,OAAO,CAACE,KAAK;MACpBC,IAAI,EAAEH,OAAO,CAACG,IAAI;MAClBC,WAAW,EAAEJ,OAAO,CAACI,WAAW;MAChCC,SAAS,EAAEL,OAAO,CAACK,SAAS,IAAI,EAAE;MAClCC,gBAAgB,EAAEN,OAAO,CAACM,gBAAgB,IAAI,EAAE;MAChDC,iBAAiB,EAAEC,KAAK,CAACC,OAAO,CAACT,OAAO,CAACO,iBAAiB,CAAC,GAAGP,OAAO,CAACO,iBAAiB,GAAG;IAC5F,CAAC;IAEDb,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAER,cAAc,CAAC,CAAC,CAAC;;IAE7DF,GAAG,CAAC;MACFM,cAAc,EAAES,OAAO;MACvBb,cAAc,EAAEA,cAAc;MAC9BC,OAAO,EAAEY,OAAO,CAACU,MAAM,GAAG;QAAEA,MAAM,EAAEV,OAAO,CAACU;MAAO,CAAC,GAAG,IAAI;MAC3DrB,WAAW,EAAEW,OAAO,CAACX,WAAW,IAAI,IAAI;MACxCC,QAAQ,EAAEU,OAAO,CAACV,QAAQ,IAAI;IAChC,CAAC,CAAC;EACJ,CAAC;EAED;EACAuB,cAAc,EAAEA,CAACC,IAAI,EAAEC,IAAI,KAAK;IAC9BrB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEmB,IAAI,EAAE,YAAY,EAAEC,IAAI,CAAC,CAAC,CAAC;IACvE,MAAMC,KAAK,GAAG9B,GAAG,CAAC,CAAC;IACnB,QAAQ4B,IAAI;MACV,KAAK,CAAC;QAAE;QACN,MAAMG,cAAc,GAAG;UACrB,GAAGF,IAAI;UACPR,iBAAiB,EAAEC,KAAK,CAACC,OAAO,CAACM,IAAI,CAACR,iBAAiB,CAAC,GAAGQ,IAAI,CAACR,iBAAiB,GAAG;QACtF,CAAC;QACDb,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEsB,cAAc,CAAC,CAAC,CAAC;QACzDhC,GAAG,CAAC;UACFE,cAAc,EAAE8B,cAAc;UAC9B1B,cAAc,EAAE;YACd,GAAGyB,KAAK,CAACzB,cAAc;YACvB,GAAG0B;UACL;QACF,CAAC,CAAC;QACF;MACF,KAAK,CAAC;QAAE;QACNhC,GAAG,CAAC;UACFG,OAAO,EAAE2B,IAAI;UACbxB,cAAc,EAAE;YACd,GAAGyB,KAAK,CAACzB,cAAc;YACvBmB,MAAM,EAAEK,IAAI,CAACL;UACf;QACF,CAAC,CAAC;QACF;MACF,KAAK,CAAC;QAAE;QACN,MAAMQ,oBAAoB,GAAGV,KAAK,CAACC,OAAO,CAACM,IAAI,CAAC,GAC5C;UAAE1B,WAAW,EAAE0B;QAAK,CAAC,GACrBA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE1B,WAAW,GACf0B,IAAI,GACJ;UAAE1B,WAAW,EAAE;QAAG,CAAC;QACzBJ,GAAG,CAAC;UACFI,WAAW,EAAE6B,oBAAoB;UACjC3B,cAAc,EAAE;YACd,GAAGyB,KAAK,CAACzB,cAAc;YACvBF,WAAW,EAAE6B,oBAAoB,CAAC7B;UACpC;QACF,CAAC,CAAC;QACF;MACF,KAAK,CAAC;QAAE;QACNJ,GAAG,CAAC;UACFK,QAAQ,EAAEyB,IAAI;UACdxB,cAAc,EAAE;YACd,GAAGyB,KAAK,CAACzB,cAAc;YACvBD,QAAQ,EAAEyB;UACZ;QACF,CAAC,CAAC;QACF;MACF;QACE;IACJ;EACF,CAAC;EAED;EACAI,WAAW,EAAGL,IAAI,IAAK;IAAA,IAAAM,qBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACrB,MAAMR,KAAK,GAAG9B,GAAG,CAAC,CAAC;IACnB,IAAI6B,IAAI;IACR,QAAQD,IAAI;MACV,KAAK,CAAC;QACJC,IAAI,GAAGC,KAAK,CAAC7B,cAAc,IAAI;UAC7B,GAAG6B,KAAK,CAACzB,cAAc;UACvBgB,iBAAiB,EAAEC,KAAK,CAACC,OAAO,EAAAW,qBAAA,GAACJ,KAAK,CAACzB,cAAc,cAAA6B,qBAAA,uBAApBA,qBAAA,CAAsBb,iBAAiB,CAAC,GACrES,KAAK,CAACzB,cAAc,CAACgB,iBAAiB,GACtC;QACN,CAAC;QACDb,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEoB,IAAI,CAAC,CAAC,CAAC;QACpD,OAAOA,IAAI;MACb,KAAK,CAAC;QACJ,OAAOC,KAAK,CAAC5B,OAAO,KAAK,CAAAiC,sBAAA,GAAAL,KAAK,CAACzB,cAAc,cAAA8B,sBAAA,eAApBA,sBAAA,CAAsBX,MAAM,GAAG;UAAEA,MAAM,EAAEM,KAAK,CAACzB,cAAc,CAACmB;QAAO,CAAC,GAAGe,SAAS,CAAC;MAC9G,KAAK,CAAC;QACJ,KAAAH,kBAAA,GAAIN,KAAK,CAAC3B,WAAW,cAAAiC,kBAAA,eAAjBA,kBAAA,CAAmBjC,WAAW,EAAE;UAClC,OAAO2B,KAAK,CAAC3B,WAAW,CAACA,WAAW;QACtC;QACA,KAAAkC,sBAAA,GAAIP,KAAK,CAACzB,cAAc,cAAAgC,sBAAA,eAApBA,sBAAA,CAAsBlC,WAAW,EAAE;UACrC,OAAO2B,KAAK,CAACzB,cAAc,CAACF,WAAW;QACzC;QACA,OAAO,EAAE;MACX,KAAK,CAAC;QACJ,OAAO2B,KAAK,CAAC1B,QAAQ,MAAAkC,sBAAA,GAAIR,KAAK,CAACzB,cAAc,cAAAiC,sBAAA,uBAApBA,sBAAA,CAAsBlC,QAAQ;MACzD;QACE,OAAO,IAAI;IACf;EACF;AACF,CAAC,CAAC,CAAC;AAEH,eAAeN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}