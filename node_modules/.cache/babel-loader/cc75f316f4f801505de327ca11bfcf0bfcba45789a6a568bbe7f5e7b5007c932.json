{"ast":null,"code":"import { create } from 'zustand';\nexport const useRiskMatrixStore = create(set => ({\n  // State\n  matrixType: 'ICAO',\n  // Default to ICAO matrix (uppercase)\n\n  // Actions\n  setMatrixType: type => {\n    // Only accept 'ICAO' or 'Integrated'\n    if (type !== 'ICAO' && type !== 'Integrated') {\n      console.error('Invalid matrix type:', type);\n      return;\n    }\n    set({\n      matrixType: type\n    });\n  }\n}));","map":{"version":3,"names":["create","useRiskMatrixStore","set","matrixType","setMatrixType","type","console","error"],"sources":["C:/Users/tmh73/Aviation Synergy/MaXwell AI - General/HIRA_25/src/stores/riskMatrixStore.js"],"sourcesContent":["import { create } from 'zustand';\n\nexport const useRiskMatrixStore = create((set) => ({\n  // State\n  matrixType: 'ICAO', // Default to ICAO matrix (uppercase)\n  \n  // Actions\n  setMatrixType: (type) => {\n    // Only accept 'ICAO' or 'Integrated'\n    if (type !== 'ICAO' && type !== 'Integrated') {\n      console.error('Invalid matrix type:', type);\n      return;\n    }\n    set({ matrixType: type });\n  },\n}));\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,OAAO,MAAMC,kBAAkB,GAAGD,MAAM,CAAEE,GAAG,KAAM;EACjD;EACAC,UAAU,EAAE,MAAM;EAAE;;EAEpB;EACAC,aAAa,EAAGC,IAAI,IAAK;IACvB;IACA,IAAIA,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,YAAY,EAAE;MAC5CC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,IAAI,CAAC;MAC3C;IACF;IACAH,GAAG,CAAC;MAAEC,UAAU,EAAEE;IAAK,CAAC,CAAC;EAC3B;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}